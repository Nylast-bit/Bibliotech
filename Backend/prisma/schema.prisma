generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Libro {
  ID_LIBRO       Int      @id @default(autoincrement())
  ISBN           String      
  TITULO         String   @db.VarChar(255)
  AUTOR          String   @db.VarChar(255)
  EDITORIAL      String   @db.VarChar(255)
  FECHA_EDICION  String   @db.VarChar(255)
  IMAGEURL       String   @db.VarChar(255)
  CALIFICACION   Decimal  @db.Decimal(18, 2)

  Libro_Genero Libro_Genero[]
  Comentario   Comentario[]
  Ejemplar     Ejemplar[]
}

model Genero {
  ID_GENERO     Int            @id @default(autoincrement())
  NOMBRE_GENERO String         @unique
  Libro_Genero  Libro_Genero[]
}

model Libro_Genero {
  genero Genero @relation(fields: [ID_GENERO], references: [ID_GENERO])
  libro  Libro  @relation(fields: [ID_LIBRO], references: [ID_LIBRO])

  ID_GENERO Int
  ID_LIBRO  Int

  @@id([ID_GENERO, ID_LIBRO])
}

model Usuario {
  ID_USUARIO         Int          @id @default(autoincrement())
  NOMBRE         String 
  CORREO_ELECTRONICO String       @unique       
  CONTRASENA         String       
  FECHA_CREACION     DateTime     @default(now())
  Comentario         Comentario[]
  Ventas             Ventas[]
}

model Comentario {
  ID_COMENTARIO          Int      @id @default(autoincrement())
  DESCRIPCION_COMENTARIO String   @db.Text
  FECHA_COMENTARIO       DateTime @default(now()) @db.Date
  ID_USUARIO             Int
  ID_LIBRO               Int

  // Relaciones con Usuario y Libro
  usuario Usuario @relation(fields: [ID_USUARIO], references: [ID_USUARIO])
  libro   Libro   @relation(fields: [ID_LIBRO], references: [ID_LIBRO])
}

model Ejemplar {
  NUM_EJEMPLAR       Int      @id @default(autoincrement())
  FECHA_ADQUISICION  DateTime @db.Date
  UBICACION_LIBRERIA String   @db.VarChar(255)
  PRECIO             Decimal  @db.Decimal(10, 2)
  ESTADO             String   @db.VarChar(255)
  TIPO_TAPA          String   @db.VarChar(255)
  ID_LIBRO           Int

  // Relaci√≥n con Libro
  libro  Libro    @relation(fields: [ID_LIBRO], references: [ID_LIBRO])
  Ventas Ventas[]
}

model Ventas {
  ID_VENTAS       Int      @id @default(autoincrement())
  CANTIDAD_LIBROS Int
  FECHA_HORA      DateTime @default(now()) @db.Timestamp
  IMPUESTOS       Decimal  @db.Decimal(10, 2)
  SUBTOTAL        Decimal  @db.Decimal(10, 2)
  TOTAL           Decimal  @db.Decimal(10, 2)
  // Relaciones con Ejemplar y Usuario
  ejemplar Ejemplar @relation(fields: [NUM_EJEMPLAR], references: [NUM_EJEMPLAR])
  NUM_EJEMPLAR    Int  
  
  usuario  Usuario  @relation(fields: [ID_USUARIO], references: [ID_USUARIO])
 
  ID_USUARIO      Int 

}
